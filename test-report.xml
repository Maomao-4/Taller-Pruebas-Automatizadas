<?xml version="1.0" encoding="UTF-8"?>
<testExecutions version="1">
  <file path="C:\Users\tomoy\OneDrive\Desktop\Taller-test-unitarios-express-con-jest-main\src\__tests__\todo.repository.test.ts">
    <testCase name="InMemoryTodoRepository create should create a new todo" duration="16"/>
    <testCase name="InMemoryTodoRepository create should create todo without description" duration="1"/>
    <testCase name="InMemoryTodoRepository findAll should return empty array when no todos exist" duration="1"/>
    <testCase name="InMemoryTodoRepository findAll should return all todos" duration="0"/>
    <testCase name="InMemoryTodoRepository findById should return todo by id" duration="1"/>
    <testCase name="InMemoryTodoRepository findById should return null for non-existent id" duration="1"/>
    <testCase name="InMemoryTodoRepository update should update existing todo" duration="1"/>
    <testCase name="InMemoryTodoRepository update should return null for non-existent todo" duration="0"/>
    <testCase name="InMemoryTodoRepository delete should delete existing todo" duration="1"/>
    <testCase name="InMemoryTodoRepository delete should return false for non-existent todo" duration="1"/>
  </file>
  <file path="C:\Users\tomoy\OneDrive\Desktop\Taller-test-unitarios-express-con-jest-main\src\__tests__\todo.service.test.ts">
    <testCase name="TodoService createTodo should create a new todo" duration="9"/>
    <testCase name="TodoService getAllTodos should return all todos" duration="0"/>
    <testCase name="TodoService getTodoById should return todo by id" duration="1"/>
    <testCase name="TodoService getTodoById should return null for non-existent id" duration="1"/>
    <testCase name="TodoService updateTodo should update existing todo" duration="0"/>
    <testCase name="TodoService updateTodo should return null for non-existent todo" duration="1"/>
    <testCase name="TodoService deleteTodo should delete existing todo" duration="0"/>
    <testCase name="TodoService deleteTodo should return false for non-existent todo" duration="1"/>
    <testCase name="TodoService getCompletedTodos should return only completed todos" duration="0"/>
    <testCase name="TodoService getPendingTodos should return only pending todos" duration="1"/>
  </file>
  <file path="C:\Users\tomoy\OneDrive\Desktop\Taller-test-unitarios-express-con-jest-main\src\__tests__\error.middleware.test.ts">
    <testCase name="error middleware errorHandler responde 500 con shape esperado" duration="10"/>
    <testCase name="error middleware notFoundHandler responde 404 con shape esperado" duration="0"/>
  </file>
  <file path="C:\Users\tomoy\OneDrive\Desktop\Taller-test-unitarios-express-con-jest-main\src\__tests__\todo.controller.errors.test.ts">
    <testCase name="Todo controller - errores inesperados (→ 500) GET /api/todos → 500 si el service.getAllTodos lanza" duration="38"/>
    <testCase name="Todo controller - errores inesperados (→ 500) POST /api/todos → 500 si el service.createTodo lanza (no Zod)" duration="175"/>
    <testCase name="Todo controller - errores inesperados (→ 500) PUT /api/todos/:id → 500 si el service.updateTodo lanza (no Zod)" duration="7"/>
    <testCase name="Todo controller - errores inesperados (→ 500) DELETE /api/todos/:id → 500 si el service.deleteTodo lanza" duration="5"/>
  </file>
  <file path="C:\Users\tomoy\OneDrive\Desktop\Taller-test-unitarios-express-con-jest-main\src\__tests__\todo.controller.validation.ts">
    <testCase name="Todo controller - validaciones (Zod → 400) POST /api/todos sin title → 400" duration="229"/>
    <testCase name="Todo controller - validaciones (Zod → 400) PUT /api/todos/:id con payload inválido → 400" duration="6"/>
  </file>
  <file path="C:\Users\tomoy\OneDrive\Desktop\Taller-test-unitarios-express-con-jest-main\src\__tests__\todo.api.test.ts">
    <testCase name="Todo API GET /health should return health status" duration="48"/>
    <testCase name="Todo API POST /api/todos should create a new todo" duration="156"/>
    <testCase name="Todo API POST /api/todos should return validation error for invalid data" duration="8"/>
    <testCase name="Todo API GET /api/todos should return all todos" duration="13"/>
    <testCase name="Todo API GET /api/todos/:id should return todo by id" duration="9"/>
    <testCase name="Todo API GET /api/todos/:id should return 404 for non-existent todo" duration="6"/>
    <testCase name="Todo API PUT /api/todos/:id should update existing todo" duration="9"/>
    <testCase name="Todo API PUT /api/todos/:id should return 404 for non-existent todo" duration="7"/>
    <testCase name="Todo API DELETE /api/todos/:id should delete existing todo" duration="10"/>
    <testCase name="Todo API DELETE /api/todos/:id should return 404 for non-existent todo" duration="9"/>
    <testCase name="Todo API GET /api/todos/completed should return only completed todos" duration="14"/>
    <testCase name="Todo API GET /api/todos/pending should return only pending todos" duration="13"/>
  </file>
</testExecutions>